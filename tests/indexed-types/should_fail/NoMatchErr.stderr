
NoMatchErr.hs:20:5:
    Could not deduce (Memo d0 ~ Memo d)
    from the context (Fun d)
      bound by the type signature for f :: Fun d => Memo d a -> Memo d a
      at NoMatchErr.hs:19:7-37
    NB: `Memo' is a type function, and may not be injective
    The type variable `d0' is ambiguous
    Possible fix: add a type signature that fixes these type variable(s)
    Expected type: (d0 -> a) -> Memo d a
      Actual type: (d0 -> a) -> Memo d0 a
    Relevant bindings include
      f :: Memo d a -> Memo d a (bound at NoMatchErr.hs:20:1)
    In the first argument of `(.)', namely `abst'
    In the expression: abst . appl
    In an equation for `f': f = abst . appl
